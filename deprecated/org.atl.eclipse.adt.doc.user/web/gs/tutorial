<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 11 (filtered)">
<title>ATL User Manual - first version</title>

<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:SimSun;
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
	{font-family:"\@SimSun";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	font-size:12.0pt;
	font-family:"Times New Roman";}
h1
	{margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:21.6pt;
	text-align:justify;
	text-indent:-21.6pt;
	page-break-after:avoid;
	font-size:18.0pt;
	font-family:Arial;}
h2
	{margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:28.8pt;
	text-align:justify;
	text-indent:-28.8pt;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:Arial;
	font-style:italic;}
h3
	{margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:36.0pt;
	text-indent:-36.0pt;
	page-break-after:avoid;
	font-size:13.0pt;
	font-family:Arial;}
h4
	{margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:43.2pt;
	text-align:justify;
	text-indent:-43.2pt;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Times New Roman";}
h5
	{margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:50.4pt;
	text-align:justify;
	text-indent:-50.4pt;
	font-size:13.0pt;
	font-family:"Times New Roman";
	font-style:italic;}
h6
	{margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:57.6pt;
	text-align:justify;
	text-indent:-57.6pt;
	font-size:11.0pt;
	font-family:"Times New Roman";}
p.MsoHeading7, li.MsoHeading7, div.MsoHeading7
	{margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:64.8pt;
	text-align:justify;
	text-indent:-64.8pt;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.MsoHeading8, li.MsoHeading8, div.MsoHeading8
	{margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:72.0pt;
	text-align:justify;
	text-indent:-72.0pt;
	font-size:12.0pt;
	font-family:"Times New Roman";
	font-style:italic;}
p.MsoHeading9, li.MsoHeading9, div.MsoHeading9
	{margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:79.2pt;
	text-align:justify;
	text-indent:-79.2pt;
	font-size:11.0pt;
	font-family:Arial;}
p.MsoToc1, li.MsoToc1, div.MsoToc1
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.MsoToc2, li.MsoToc2, div.MsoToc2
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:12.0pt;
	margin-bottom:.0001pt;
	text-align:justify;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.MsoToc3, li.MsoToc3, div.MsoToc3
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:24.0pt;
	margin-bottom:.0001pt;
	text-align:justify;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.MsoCaption, li.MsoCaption, div.MsoCaption
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	font-size:10.0pt;
	font-family:"Times New Roman";
	font-weight:bold;}
p.MsoTof, li.MsoTof, div.MsoTof
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.MsoListNumber, li.MsoListNumber, div.MsoListNumber
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	text-align:justify;
	font-size:12.0pt;
	font-family:"Times New Roman";}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	font-size:8.0pt;
	font-family:Tahoma;}
span.StyleArial14pt
	{font-family:Arial;}
span.Code
	{font-family:"Courier New";
	color:#7F0055;
	font-weight:bold;}
p.CODE0, li.CODE0, div.CODE0
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-autospace:none;
	font-size:12.0pt;
	font-family:"Courier New";}
p.code2, li.code2, div.code2
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Courier New";}
p.Atitle, li.Atitle, div.Atitle
	{margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:21.6pt;
	text-align:justify;
	text-indent:-21.6pt;
	page-break-after:avoid;
	font-size:18.0pt;
	font-family:Arial;
	font-weight:bold;}
span.LgendeCar
	{font-weight:bold;}
p.AnnexTitleI, li.AnnexTitleI, div.AnnexTitleI
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:-36.0pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:0cm;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.Reference, li.Reference, div.Reference
	{margin-top:6.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:18.0pt;
	margin-bottom:.0001pt;
	text-indent:-18.0pt;
	font-size:10.0pt;
	font-family:"Times New Roman";}
p.StyleLgende, li.StyleLgende, div.StyleLgende
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	font-size:10.0pt;
	font-family:"Times New Roman";
	font-weight:bold;}
p.Atitle2, li.Atitle2, div.Atitle2
	{margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:28.8pt;
	text-align:justify;
	text-indent:-28.8pt;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:Arial;
	font-weight:bold;
	font-style:italic;}
 /* Page Definitions */
 @page Section1
	{size:595.3pt 841.9pt;
	margin:70.85pt 70.85pt 70.85pt 70.85pt;}
div.Section1
	{page:Section1;}
@page Section2
	{size:595.3pt 841.9pt;
	margin:70.85pt 70.85pt 70.85pt 70.85pt;}
div.Section2
	{page:Section2;}
@page Section3
	{size:595.3pt 841.9pt;
	margin:70.85pt 70.85pt 70.85pt 70.85pt;}
div.Section3
	{page:Section3;}
 /* List Definitions */
 ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>

</head>

<body lang=FR link=blue vlink=purple>

<div class=Section1>

<p class=MsoToc1><b><span lang=EN-GB style='font-size:26.0pt'>ATL Tutorial</span></b></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

</div>

<span style='font-size:12.0pt;font-family:"Times New Roman"'><br clear=all
style='page-break-before:right'>
</span>

<div class=Section2>

<h2><span lang=EN-GB>1.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Creating an ATL File and ATL Project</span></h2>

<p class=MsoNormal><a name="_Toc88644830"></a><a name="_Toc98571941"></a><a
name="_Toc88885453"><span lang=EN-GB>It is essential to know how to create an
ATL Project and an ATL file. </span></a></p>

<p class=MsoNormal><span lang=EN-GB>To create an ATL project select the “File”
menu, choose “New”, then “Project” and finally “ATL / ATL Project”. Enter a
project name and press the “Finish” button.</span></p>

<p class=MsoNormal><span lang=EN-GB>An ATL file is created in the ATL project
folder by selecting “New” in the menu “File”, then choosing “File”. Enter the
file name and add the extension “.atl”. Press “Finish”.</span></p>

<p class=MsoNormal><span lang=EN-GB>You can download the Book2Publication example of this tutorial 
<a href="./Books2PublicationAdvancedVersion.zip">here</a>
.</span></p>

<h1><span lang=EN-GB>2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Preparation</span></h1>

<p class=MsoNormal><span lang=EN-GB>Before an ATL program can be written you
must have the target and the source metamodels. For the scope of this manual,
the <i>Book to Publicatio</i>n transformation example (see Figure 1 for the <i>Book</i>
metamodel and Figure 2 for the <i>Publication</i> metamodel) is used to
illustrate ATL. Ecore models can be defined with KM3 [2].</span></p>

<p class=MsoNormal align=center style='text-align:center;page-break-after:avoid'><span
lang=EN-GB><img width=127 height=257
src="htmlShortATL_User_Manual%5bv00.05%5d_fichiers/image001.gif"></span></p>

<p class=MsoCaption align=center style='text-align:center'><a
name="_Toc98571970"></a><a name="_Ref88824722"><span lang=EN-GB>Figure </span></a><span lang=EN-GB>1</span><span lang=EN-GB> <a name="_Ref88897690">The Book metamodel</a></span></p>

<p class=MsoNormal><span lang=EN-GB>The <i>Book</i> metamodel contains the
class <i>Book </i>which contains a set of <i>Chapters. Books</i> and <i>Chapters</i>
have <i>titles</i>. Additionally, <i>Chapters</i> have a number of pages, <i>nbPages</i>,
and <i>author</i>. </span></p>

<p class=MsoNormal align=center style='text-align:center;page-break-after:avoid'><span
lang=EN-GB><img width=127 height=97
src="htmlShortATL_User_Manual%5bv00.05%5d_fichiers/image002.gif"></span></p>

<p class=MsoCaption align=center style='text-align:center'><a
name="_Toc98571971"></a><a name="_Ref88824729"><span lang=EN-GB>Figure </span></a><span lang=EN-GB>2</span><span lang=EN-GB> The Publication metamodel</span></p>

<p class=MsoNormal><span lang=EN-GB>The metamodel <i>Publication</i> consists
of the class <i>Publication</i> which has a <i>title</i>, a number of pages, <i>nbPages</i>,
and <i>authors</i>. The attribute <i>authors</i> is a String that contains the
names of authors separated with the word <i>and</i>.</span></p>

<p class=MsoNormal><span lang=EN-GB>In the following it will be shown step by
step how to program an ATL module that transforms <i>Book</i> models into <i>Publication</i>
models. An ATL module begins with the header section and ends with the rules
section.</span></p>

<h2><a name="_Toc98571942"></a><a name="_Toc88885454"><span lang=EN-GB>2.1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-GB>Header Section</span></a></h2>

<p class=MsoNormal><span lang=EN-GB>The header section defines the names of the
transformation module and the variables of the source and target models. </span></p>

<p class=MsoNormal><span lang=EN-GB>The following ATL source code represents
the header of the <i>Book2Publication.atl</i> file, thus the ATL header for the
transformation from <i>Book</i> <i>to</i> <i>Publication</i>:</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal align=left style='margin-left:21.6pt;text-align:left;
text-autospace:none'><b><span lang=EN-GB style='font-size:10.0pt;font-family:
"Courier New";color:#7F0055;background:white'>module</span></b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> Book2Publication;</span></p>

<p class=MsoNormal align=left style='margin-left:21.6pt;text-align:left;
text-autospace:none'><b><span lang=EN-GB style='font-size:10.0pt;font-family:
"Courier New";color:#7F0055;background:white'>create</span></b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> OUT : Publication </span><b><span lang=EN-GB
style='font-size:10.0pt;font-family:"Courier New";color:#7F0055;background:
white'>from</span></b><span lang=EN-GB style='font-size:10.0pt;font-family:
"Courier New";color:black;background:white'> IN : Book;</span></p>

<p class=MsoNormal align=left style='margin-left:21.6pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>The keyword <i>module</i> defines the
module name.</span></p>

<p class=MsoNormal><span lang=EN-GB>The keyword <i>create </i>introduces the
target models declaration.</span></p>

<p class=MsoNormal><span lang=EN-GB>The keywords <i>from </i>introduces the
source models declaration.</span></p>

<p class=MsoNormal><span lang=EN-GB>Please note:</span></p>

<p class=MsoNormal style='margin-left:53.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>The ATL file name (here: <i>Book2Publication.atl</i>)
has to correspond to the module name (here: Book2Publication) and must end with
the extension <i>.atl</i>. The same applies to the project configuration. When
using the ATL IDE for Eclipse, the module (here: Book2Publication.atl), the model
variable names (here: <i>IN</i> and <i>OUT</i>) and model variable names (here:
<i>Publication</i> and <i>Book</i>) have to correspond to the launch
configuration (see paragraph 5.4).</span></p>

<h2><a name="_Toc98571943"></a><a name="_Ref98300107"></a><a name="_Ref98215674"></a><a
name="_Toc88885455"><span lang=EN-GB>2.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Import Section</span></a></h2>

<p class=MsoNormal><span lang=EN-GB>The import section declares what libraries have
to be imported. For instance, to import the <i>strings </i>library, one would
write:</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal align=left style='margin-left:21.6pt;text-align:left;
text-autospace:none'><b><span lang=EN-GB style='font-size:10.0pt;font-family:
"Courier New";color:#7F0055;background:white'>uses</span></b><span lang=EN-GB
style='font-size:10.0pt;font-family:"Courier New";color:black;background:white'>
strings;</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>The keyword <i>uses</i> declares the libraries
that have to be imported. There can be several import declarations. </span></p>

<p class=MsoNormal><span lang=EN-GB>Please note:</span></p>

<p class=MsoNormal style='margin-left:53.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Do not declare imports that are not necessary.</span></p>

<p class=MsoNormal style='margin-left:53.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>The <i>string.atl</i> library contains many
useful functions for Strings but is not necessary for the <i>Book to
Publication</i> example.</span></p>

<p class=MsoNormal style='margin-left:53.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>The launch configuration (see paragraph 5.4)
must indicate where the imports are to be found. Otherwise imports cannot be
uploaded.</span></p>

<h2><a name="_Toc88885456"></a><a name="_Ref88885319"></a><a name="_Ref88885299"></a><a
name="_Toc88644831"></a><a name="_Toc98571944"><span lang=EN-GB>2.3<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-GB>Helpers</span></a><span lang=EN-GB> </span></h2>

<p class=MsoNormal><span lang=EN-GB>Helpers can be used to define (global)
variables and functions. Helper functions are OCL expressions. They can call
each other (recursion is possible) or they can be called from within rules (see
section 3.5). In general, they serve to define repetitive pieces of code in one
place. </span></p>

<p class=MsoNormal><span lang=EN-GB>A helper function has the following
structure:</span></p>

<p class=MsoNormal style='margin-left:53.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>It starts with the keyword <i>helper </i>and
ends with a semicolon.  In between is an OCL expression.</span></p>

<p class=MsoNormal style='margin-left:53.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>The notion of the term <i>context</i> is similar
to OCL and it may be compared to an input parameter of a method. A context
variable is specified with the help of the ATL path expression <i>metamodel!element</i>
and is accessible via the self variable. In most cases the elements referred to
are classes, e.g. the class Book of the metamodel Book. If no <i>context</i> is
specified, the module itself is taken as context.</span></p>

<p class=MsoNormal style='margin-left:53.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>The function name is introduced with <i>def : </i>and
is followed by brackets.</span></p>

<p class=MsoNormal style='margin-left:53.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>The return type is between a colon and an equals
sign that serves as starting point for the function implementation.</span></p>

<p class=MsoNormal style='margin-left:53.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>The function finishes with a semicolon.</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>For the <i>Book to Publication</i> example,
a <i>getAuthor</i> function has to be implemented. Its task is to iterate over
the different <i>Chapters</i> of <i>Book </i>in order to build a String
containing all <i>Authors’</i> <i>names</i>. The word <i>and</i> separates the <i>Authors’
names</i>:  </span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><b><span lang=EN-GB style='font-size:10.0pt;font-family:
"Courier New";color:#7F0055;background:white'>helper</span></b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> </span><b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:#7F0055;background:white'>context</span></b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> Book!Book </span><b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:#7F0055;background:white'>def</span></b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> : getAuthors() : </span><span lang=EN-GB style='font-size:
10.0pt;font-family:"Courier New";color:#00C000;background:white'>String</span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> =</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>       self.chapters-&gt;collect(e |
e.author)-&gt;</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                              asSet()-&gt;</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                             iterate(authorName;
acc : </span><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:#00C000;background:white'>String</span><span lang=EN-GB style='font-size:
10.0pt;font-family:"Courier New";color:black;background:white'> = </span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#2A00FF;
background:white'>''</span><span lang=EN-GB style='font-size:10.0pt;font-family:
"Courier New";color:black;background:white'> |</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                                   acc + </span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                                     </span><b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#7F0055;
background:white'>if</span></b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'> acc = </span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#2A00FF;
background:white'>''</span><span lang=EN-GB style='font-size:10.0pt;font-family:
"Courier New";color:black;background:white'> </span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                                       </span><b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#7F0055;
background:white'>then</span></b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'> authorName </span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                                        </span><b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#7F0055;
background:white'>else</span></b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'> </span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#2A00FF;
background:white'>' and ' </span><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'>+ authorName </span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                                     </span><b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#7F0055;
background:white'>endif</span></b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'>);</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>The context variable <i>self</i> is
instance of the class <i>Book!Book</i>. The collect method gets all <i>author</i>
attributes of all <i>Chapters</i>. The <i>asSet</i> method eliminates all
doublets by converting the sequence to a set. The <i>iterate</i> operation is
well known from OCL and iterates over a <i>Collection</i> while accumulating data.
In this case it iterates over the <i>author</i> attributes of all <i>Chapters</i>
of a <i>Book</i> and collects the <i>Authors’</i> <i>names</i>. The variable <i>authorName</i>
references the <i>Author’s name</i> of the current iteration. The variable <i>acc</i>
severs to accumulate all <i>authorNames</i>. The <i>if</i> expression returns
an instance of <i>String </i>containing the <i>authorName</i> if <i>acc</i> is empty.
Otherwise, it concatenates ‘<i>and’</i> with the <i>authorName</i>. The <i>getAuthors
</i>function<i> </i>returns the result of the last iteration containing the
concatenation of all <i>Authors’ names</i>.</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>Often it is possible to either define a
context or a parameter variable. The below program with parameter variable does
exactly the same as the program above with context variable:</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><b><span lang=EN-GB style='font-size:10.0pt;font-family:
"Courier New";color:#7F0055;background:white'>helper</span></b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> </span><b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:#7F0055;background:white'>def</span></b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> : getAuthors(b : Book!Book) : </span><span lang=EN-GB
style='font-size:10.0pt;font-family:"Courier New";color:#00C000;background:
white'>String</span><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'> =</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>       b.chapters-&gt;collect(e | e.author)-&gt;</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                              asSet()-&gt;</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                             iterate(authorName;
acc : </span><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:#00C000;background:white'>String</span><span lang=EN-GB style='font-size:
10.0pt;font-family:"Courier New";color:black;background:white'> = </span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#2A00FF;
background:white'>''</span><span lang=EN-GB style='font-size:10.0pt;font-family:
"Courier New";color:black;background:white'> |</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                                   acc + </span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                                     </span><b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#7F0055;
background:white'>if</span></b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'> acc = </span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#2A00FF;
background:white'>''</span><span lang=EN-GB style='font-size:10.0pt;font-family:
"Courier New";color:black;background:white'> </span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                                       </span><b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#7F0055;
background:white'>then</span></b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'> authorName </span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                                        </span><b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#7F0055;
background:white'>else</span></b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'> </span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#2A00FF;
background:white'>' and ' </span><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'>+ authorName </span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                                     </span><b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#7F0055;
background:white'>endif</span></b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'>);</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>The mayor difference of the two helper
functions is the way that they are called.</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>The helper function with context is called with:</span></p>

<p class=MsoNormal><span lang=EN-GB>            </span><span lang=EN-GB
style='font-size:10.0pt;font-family:"Courier New";color:black;background:white'>b.getAuthors()</span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>while the helper function with parameter is
called with:</span></p>

<p class=MsoNormal><span lang=EN-GB>            </span><span lang=EN-GB
style='font-size:10.0pt;font-family:"Courier New";color:black;background:white'>thisModule.getAuthors(b)</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>Please note:</span></p>

<p class=MsoNormal style='margin-left:59.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Each helper function must have a name and a
return type definition. There may be functions with the same name but a
different context.</span></p>

<p class=MsoNormal style='margin-left:59.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>If the context is not otherwise specified,
implicitly the module itself is taken as context. </span></p>

<p class=MsoNormal style='margin-left:59.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>If the helper has no context defined, the helper
has to be called with “thisModule.”.</span></p>

<h2><a name="_Toc98571945"></a><a name="_Toc88885457"></a><a name="_Ref86491829"><span
lang=EN-GB>2.4<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Rules</span></a></h2>

<p class=MsoNormal><span lang=EN-GB>Rules describe the transformation from a
source model to a target model by relating metamodels. Each rule contains a
unique name. It is introduced by the keyword <i>rule </i>that is followed by
the rule’s name. Its implementation is surrounded by curly brackets.</span></p>

<p class=MsoNormal><span lang=EN-GB>In the <i>source pattern</i> (<i>from </i>part),
rules declare which element type of the source model has to be transformed. </span></p>

<p class=MsoNormal><span lang=EN-GB>The <i>source pattern</i> consists of the
keyword <i>from</i>, an <i>in</i> variable declaration and optionally of a
filter. A <i>filter</i> is an OCL expression restricting the rule to elements
of the source model that satisfy certain constraints. The filter is written
behind the in variable declaration and surrounded by brackets.</span></p>

<p class=MsoNormal><span lang=EN-GB>In the <i>target pattern</i> (the <i>to </i>part),
rules declare to which element(s) of the target model the <i>source pattern</i>
has to be transformed to. The implementation of the <i>target pattern</i>
declares the details of the transformation. It may contain one or several <i>target
pattern elements</i> (see paragraph 4.4). </span></p>

<p class=MsoNormal><span lang=EN-GB>A <i>target pattern element </i>consists of<i>
</i>a variable declaration (or more precisely the declaration of the <i>target
pattern variable</i>) and a sequence of bindings (<i>assignments</i>). These bindings
consist mainly of left arrow constructs. Usually, an attribute of the target
model <i>out</i> (on the left side of the arrow) receives a return value of an
OCL expression (on the right side of the arrow) that is based on the <i>in</i>
variable. In this sense, the right side of the arrow may consist of an
attribute of the <i>in</i> variable or a call to a helper function (which is an
OCL expression).</span></p>

<p class=MsoNormal><span lang=EN-GB>For the <i>Book</i> <i>to</i> <i>Publication</i>
example, a rule is required that transforms a <i>Book</i> to a <i>Publication</i>.
Only <i>Books</i> with more than two pages are considered as <i>Publications</i>.
The titles of <i>Books</i> and <i>Publications</i> have to correspond. The <i>authors</i>
attribute of <i>Publication </i>contains all <i>authors</i> of all <i>Chapters</i>.
For the latter, the function <i>getAuthors</i> (see section 3.4) and the <i>getNbPages</i>
(see annex I) can be reused. The number of pages of a <i>Publication</i> is the
sum of all pages of the <i>Chapters</i> of a <i>Book</i>.</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><b><span lang=EN-GB style='font-size:10.0pt;font-family:
"Courier New";color:#7F0055;background:white'>rule</span></b><span lang=EN-GB
style='font-size:10.0pt;font-family:"Courier New";color:black;background:white'>
Book2Publication {</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>      </span><b><span lang=EN-GB
style='font-size:10.0pt;font-family:"Courier New";color:#7F0055;background:
white'>from</span></b><span lang=EN-GB style='font-size:10.0pt;font-family:
"Courier New";color:black;background:white'> </span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>            b : Book!Book (</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                  b.getNbPages() &gt; 2</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>            ) </span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>      </span><b><span lang=EN-GB
style='font-size:10.0pt;font-family:"Courier New";color:#7F0055;background:
white'>to</span></b><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'> </span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>            out : Publication!Publication (</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                  title &lt;- b.title,</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                  authors &lt;- b.getAuthors(),</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                  nbPages &lt;- b.getNbPages()</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>            )</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>}</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>Please note:</span></p>

<p class=MsoNormal style='margin-left:59.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Each rule must have a name that is unique within
the module.</span></p>

<p class=MsoNormal style='margin-left:59.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Assignments are separated with comma ”,”. The
last assignment in a block of statements does not have a comma. </span></p>

<p class=MsoNormal style='margin-left:59.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>The attribution of values is performed with the
left arrow operator “&lt;-”. </span></p>

<h1><a name="_Toc98571946"><span lang=EN-GB>3<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>ATL Advanced Features</span></a></h1>

<p class=MsoNormal><span lang=EN-GB>The advanced features will be explained
using new examples that are (will be) described in the “ATL by Examples” document
because the Book2Publication example is too simple for this purpose.</span></p>

<h2><a name="_Toc98571947"><span lang=EN-GB>3.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Queries and the Generation of Text</span></a></h2>

<p class=MsoNormal><span lang=EN-GB style='background:white'>The ATL programs shown
so far are all modules<i>.</i> However, there are also ATL query programs<i>.</i>
Queries allow to analyse models and to calculate an output that is not
necessarily a model. This makes them very handy to generate text or code from a
model. </span></p>

<p class=MsoNormal><span lang=EN-GB style='background:white'>ALT query programs
must start with a query instantiation which consist of the keyword <i>query,</i>
a query variable, an equal sign and an OCL expression initializing the query
variable. </span><span lang=EN-GB>An include section (see chapter 3.3) with <i>uses</i>
is optional.</span></p>

<p class=MsoNormal><span lang=EN-GB style='background:white'>In the following
example you see an extract of the XQuery2Code program [3] which transforms
XQuery models to code. With the <i>allInstances</i> function it runs through
all elements of a particular element type of the input model. The <i>collect</i>
function calls the <i>toString </i>helper functions and concatenates the <i>String</i>
values that they return. The <i>writeTo</i> function<i> </i>writes the
concatenation into a dedicated file.</span></p>

<p class=MsoNormal><span lang=EN-GB style='background:white'>Please note that
there are several <i>toString </i>helper functions. During the execution, the
helper function with the context type that fits best (here: to the type of the <i>e</i>
variable) will be chosen for execution.</span></p>

<p class=MsoNormal><span lang=EN-GB style='background:white'>In general, one
can say that this approach simplifies the generation of text or code because
the programmer is supported in treating the coding of each metamodel types
separately.</span></p>

<p class=MsoNormal><span lang=EN-GB style='background:white'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#7F0055;
background:white'>query</span></b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'> XQuery2Code =
XQuery!XQueryProgram.allInstances()-&gt;</span></p>

<p class=MsoNormal align=left style='margin-left:106.2pt;text-align:left;
text-indent:35.4pt;text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'>collect(e |
e.toString().</span></p>

<p class=MsoNormal align=left style='margin-left:106.2pt;text-align:left;
text-indent:35.4pt;text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'>writeTo(</span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#2A00FF;
background:white'>'C:/test.xquery'</span><span lang=EN-GB style='font-size:
10.0pt;font-family:"Courier New";color:black;background:white'>));</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#7F0055;
background:white'>helper</span></b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'> </span><b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#7F0055;
background:white'>context</span></b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'> XQuery!XQueryProgram </span><b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#7F0055;
background:white'>def</span></b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'>: toString() : </span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#00C000;
background:white'>String</span><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'> =</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>      self.expressions-&gt;iterate(e; acc : </span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#00C000;
background:white'>String</span><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'> = </span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#2A00FF;
background:white'>''</span><span lang=EN-GB style='font-size:10.0pt;font-family:
"Courier New";color:black;background:white'> |</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>            acc + e.toString() + </span><span lang=EN-GB
style='font-size:10.0pt;font-family:"Courier New";color:#2A00FF;background:
white'>'\n'</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>      );</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#7F0055;
background:white'>helper</span></b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'> </span><b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#7F0055;
background:white'>context</span></b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'> XQuery!ReturnXPath </span><b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#7F0055;
background:white'>def</span></b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'>: toString() : </span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#00C000;
background:white'>String</span><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'> =</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>      </span><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:#2A00FF;background:white'>'{'</span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> + self.value + </span><span lang=EN-GB style='font-size:
10.0pt;font-family:"Courier New";color:#2A00FF;background:white'>'}'</span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>;</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#7F0055;
background:white'>helper</span></b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'> </span><b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#7F0055;
background:white'>context</span></b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'> XQuery!BooleanExp </span><b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#7F0055;
background:white'>def</span></b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'>: toString() : </span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#00C000;
background:white'>String</span><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'> =</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>      self.value;</span></p>

<h2><a name="_Toc98571948">3.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Libraries</a></h2>

<p class=MsoNormal><span lang=EN-GB>When writing large programs, it is of
advantage to group reusable pieces of code in one place. This is the purpose of
ATL libraries. In chapter 3.3 it is explained how to import existing libraries
in a module (and they can be included in a query in the same way), in this
paragraph it will be illustrated how to write a library. </span></p>

<p class=MsoNormal><span lang=EN-GB>Unlike modules, Libraries are ATL programs
that are not executable on their own and consist mainly of helper methods.
Libraries start with the keyword library, the library name and a semicolon. An
include section (see chapter 3.3) with <i>uses</i> is optional. Then helpers
follow.</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>In the following the <i>GeometryLib</i> is
shown as example:</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><b><span lang=EN-GB style='font-size:10.0pt;font-family:
"Courier New";color:#7F0055;background:white'>library</span></b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> GeometryLib;</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><b><span lang=EN-GB style='font-size:10.0pt;font-family:
"Courier New";color:#7F0055;background:white'>helper</span></b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> </span><b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:#7F0055;background:white'>def</span></b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>: PIDiv180 : </span><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:#00C000;background:white'>Real</span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> = 180.toRadians() / 180;</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:#3F7F5F;background:white'>-- and some further geometric global helper </span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#3F7F5F'>variables
</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:#3F7F5F;background:white'>&nbsp;</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:#3F7F5F;background:white'>-- adds two vectors</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><b><span lang=EN-GB style='font-size:10.0pt;font-family:
"Courier New";color:#7F0055;background:white'>helper</span></b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> </span><b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:#7F0055;background:white'>def</span></b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> : forward( a : TupleType(x : </span><span lang=EN-GB
style='font-size:10.0pt;font-family:"Courier New";color:#00C000;background:
white'>Real</span><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>, y : </span><span lang=EN-GB style='font-size:
10.0pt;font-family:"Courier New";color:#00C000;background:white'>Real</span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>, z : </span><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:#00C000;background:white'>Real</span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>),</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                        b : TupleType(x : </span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#00C000;
background:white'>Real</span><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'>, y : </span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#00C000;
background:white'>Real</span><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'>, z : </span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#00C000;
background:white'>Real</span><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'>)):</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                          TupleType(x : </span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#00C000;
background:white'>Real</span><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'>, y : </span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#00C000;
background:white'>Real</span><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'>, z : </span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#00C000;
background:white'>Real</span><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'>) =</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>      </span><span lang=EN-GB style='font-size:
10.0pt;font-family:"Courier New";color:#00C000;background:white'>Tuple</span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> {</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>            x = a.x + b.x,</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>            y = a.y + b.y,</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>            z = a.z + b.z</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>      };</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New"'>-<span
style='color:#3F7F5F;background:white'>- subtracts the second from the first </span><span
style='color:#3F7F5F'>vector</span></span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><b><span lang=EN-GB style='font-size:10.0pt;font-family:
"Courier New";color:#7F0055;background:white'>helper</span></b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> </span><b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:#7F0055;background:white'>def</span></b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> : backward(a : TupleType(x : </span><span lang=EN-GB
style='font-size:10.0pt;font-family:"Courier New";color:#00C000;background:
white'>Real</span><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>, y : </span><span lang=EN-GB style='font-size:
10.0pt;font-family:"Courier New";color:#00C000;background:white'>Real</span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>, z : </span><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:#00C000;background:white'>Real</span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>),</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                        b : TupleType(x : </span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#00C000;
background:white'>Real</span><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'>, y : </span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#00C000;
background:white'>Real</span><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'>, z : </span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#00C000;
background:white'>Real</span><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'>)) :</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                          TupleType(x : </span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#00C000;
background:white'>Real</span><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'>, y : </span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#00C000;
background:white'>Real</span><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'>, z : </span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#00C000;
background:white'>Real</span><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'>) =</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>      </span><span lang=EN-GB style='font-size:
10.0pt;font-family:"Courier New";color:#00C000;background:white'>Tuple</span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> {</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>            x = a.x - b.x,</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>            y = a.y - b.y,</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>            z = a.z - b.z</span></p>

<p class=MsoNormal align=left style='margin-left:70.8pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>};</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>      </span><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:#3F7F5F;background:white'> -- and some further
geometric helper functions            </span><span lang=EN-GB>             </span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB>In the <i>GeometryLib</i> there are several helper functions (e.g. <i>forward</i>
and <i>backward</i>) and global helper variables (e.g. <i>PIDiv180</i>) defined
that can be used by modules that needs such functionality.</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB>Once a module (or query) has imported the <i>GeometryLib</i>, it can
call the library’s helpers just as if they were defined in the module (or
query) itself. </span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB>Examples of usage of the above defined helpers:</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB>            </span><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'>thisModule.PIDiv180</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB>or</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB>            </span><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'>thisModule.forward</span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black'>( </span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#00C000;
background:white'>Tuple</span><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'> {x=10, y=10, z=</span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black'>10<span
style='background:white'>}</span>, </span></p>

<p class=MsoNormal align=left style='margin-left:141.6pt;text-align:left;
text-indent:35.4pt;text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:#00C000;background:white'>Tuple</span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> {x=10, y=10, z=</span><span lang=EN-GB style='font-size:
10.0pt;font-family:"Courier New";color:black'>10<span style='background:white'>}</span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:35.4pt;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black'>)</span></p>

<h2><a name="_Toc98571949">3.3<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Complex Headers</a></h2>

<p class=MsoNormal><span lang=EN-GB>In ATL modules you may have several source
models. Source metamodels may but need not have the same metamodel. Here is an
example: </span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><b><span lang=EN-GB style='font-size:10.0pt;font-family:
"Courier New";color:#7F0055;background:white'>module</span></b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> GeometricalTransformations;</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><b><span lang=EN-GB style='font-size:10.0pt;font-family:
"Courier New";color:#7F0055;background:white'>create</span></b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> OUT : DXF2 </span><b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:#7F0055;background:white'>from</span></b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> IN1 : DXF1, IN2 : GeoTrans;</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB>In the above case the DXF1 and DXF2 variables refer to same
metamodel, namely DXF. DXF has the class Point. One can distinguish if one
refers to a Point of the model DXF1 or of the model DXF2 simply by using the
path expressions: </span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:35.4pt;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>DXF</span><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black'>1!Point </span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB>or</span><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black'> </span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:35.4pt;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black'>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:35.4pt;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>DXF</span><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black'>2!Point</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>Please note:</span></p>

<p class=MsoNormal style='margin-left:59.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Each metamodel must have a different name (e.g.
DFX1 and DXF2) but they may point to the same metamodel file.</span></p>

<p class=MsoNormal style='margin-left:59.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Different source models are separated using
commas “,”.</span></p>

<h2><a name="_Toc98571950"></a><a name="_Ref93289984">3.4<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Rules
with Multiple </a>Instantiations</h2>

<p class=MsoNormal><span lang=EN-GB>If for one <i>source pattern </i>(the <i>from</i>
part of a <i>rule</i>) several <i>target pattern elements</i> (the <i>to</i>
part of a <i>rule</i>) have to be instantiated, we speak of multiple
instantiations. Multiple instantiations are defined using several <i>target
pattern elements </i>in one and the same rule. They are separated using commas
“,”.</span></p>

<p class=MsoNormal><span lang=EN-GB>The Class to Relational transformation has
a rule requiring that a <i>Table</i> has to be created for each <i>Class</i>.
Additionally, each <i>Table</i> has to have a <i>key</i> set containing at
least one <i>key</i>. In this example the <i>key</i> is a <i>Column</i> with
the name <i>objectID</i>. However, Classes of the source metamodel do not have
persistent identifiers (surrogates) such as keys. In this sense, for each <i>Class</i>
not just a <i>table</i> but also a <i>key </i>column has to be instantiated. Consequently,
for the <i>Class2Table</i> rule two <i>target pattern elements </i>are needed,
namely <i>table</i> for the creation of the <i>Table</i> instance and <i>new_key</i>
for the creation of the <i>key</i>. </span></p>

<p class=MsoNormal><span lang=EN-GB>Please note, that the <i>key </i>attribute of
<i>table</i> (which is a set of columns) can be initialized with <i>new_key  </i>(which
is a <i>Column</i>).  However, you must not use <i>new_key.name </i>or<i> table.name
</i>in<i> </i>expressions<i>.  </i></span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#7F0055;
background:white'>rule</span></b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'> Class2Table {</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>      </span><b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:#7F0055;background:white'>from</span></b></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>            c : Class!Class</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>      </span><b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:#7F0055;background:white'>to</span></b></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>            table : Relational!Table (</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>                  name &lt;- c.name,</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>                  key &lt;- </span><span lang=EN-GB
style='font-size:10.0pt;font-family:"Courier New";color:#00C000;background:
white'>Set</span><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'> {new_key}</span></p>

<p class=MsoNormal style='margin-left:53.1pt;text-indent:.15pt'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black'>         </span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#3F7F5F;
background:white'>-- further value </span><span lang=EN-GB style='font-size:
10.0pt;font-family:"Courier New";color:#3F7F5F'>assignments</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>            ),</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>            new_key : Relational!Column (</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>                  name &lt;- </span><span lang=EN-GB
style='font-size:10.0pt;font-family:"Courier New";color:#2A00FF;background:
white'>'objectId'</span></p>

<p class=MsoNormal style='margin-left:88.5pt;text-indent:17.7pt'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#3F7F5F;
background:white'>-- further value </span><span lang=EN-GB style='font-size:
10.0pt;font-family:"Courier New";color:#3F7F5F'>assignments</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>            )</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>}</span></p>

<h2><a name="_Toc98571951"><span lang=EN-GB>3.5<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Navigation and Multiple Instantiations</span></a></h2>

<p class=MsoNormal><span lang=EN-GB>ATL forbids the navigation in the created target
model because this implies restrictions on the execution order. Such
restrictions could severely hinder optimisation and very probably lead to poor
performance.</span></p>

<p class=MsoNormal><span lang=EN-GB>Consequently, ATL promotes navigation in
the source model. This also involves that whenever an attribute of the target
model has to be assigned with a reference to an element of the target model not
the target element is referenced, but the source element from which the target
element has been or will be created.  </span></p>

<p class=MsoNormal><span lang=EN-GB>This works very well if each source element
is mapped to no more than one target element. In case of multiple
instantiations, one can use the operation resoveTemp with the name of the
target pattern variable in order to distinguish between the different
instantiations.</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>In the class to table transformation example
for each class a table and a key will be generated:</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#7F0055;
background:white'>rule</span></b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'> Class2Table {</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>      </span><b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:#7F0055;background:white'>from</span></b></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>            c : Class!Class</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>      </span><b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:#7F0055;background:white'>to</span></b></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>            table : Relational!Table (</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>                  name &lt;- c.name,</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>                  key &lt;- </span><span lang=EN-GB
style='font-size:10.0pt;font-family:"Courier New";color:#00C000;background:
white'>Set</span><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'> {new_key}</span></p>

<p class=MsoNormal style='margin-left:53.1pt;text-indent:.15pt'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black'>         </span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#3F7F5F;
background:white'>-- further value </span><span lang=EN-GB style='font-size:
10.0pt;font-family:"Courier New";color:#3F7F5F'>assignments</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>            ),</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>            new_key : Relational!Column (</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>                  name &lt;- </span><span lang=EN-GB
style='font-size:10.0pt;font-family:"Courier New";color:#2A00FF;background:
white'>'objectId'</span></p>

<p class=MsoNormal style='margin-left:88.5pt;text-indent:17.7pt'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#3F7F5F;
background:white'>-- further value </span><span lang=EN-GB style='font-size:
10.0pt;font-family:"Courier New";color:#3F7F5F'>assignments</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>            )</span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>}</span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>An example of how to get a table reference
is:</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>            </span><span lang=EN-GB
style='font-size:10.0pt;font-family:"Courier New";color:black;background:white'>thisModule.resolveTemp(</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black'>            <span
style='background:white'>Class!Class</span></span><span lang=EN-GB
style='font-size:10.0pt;font-family:"Courier New"'>-&gt;allInstances()-&gt;</span></p>

<p class=MsoNormal align=left style='margin-left:70.8pt;text-align:left;
text-indent:35.4pt;text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New"'>select(c | c.name = </span></p>

<p class=MsoNormal align=left style='margin-left:141.6pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New"'>‘NameOfTheClassCorrespondingToTheSearchedTable’)),</span></p>

<p class=MsoNormal align=left style='margin-left:106.2pt;text-align:left;
text-indent:35.4pt;text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New"'>‘table’</span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:35.4pt;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New"'>)</span></p>

<p class=MsoNormal align=left style='margin-left:70.8pt;text-align:left;
text-indent:35.4pt;text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>An example of how to get a key reference
is:</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>            </span><span lang=EN-GB
style='font-size:10.0pt;font-family:"Courier New";color:black;background:white'>thisModule.resolveTemp(</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black'>            <span
style='background:white'>Class!Class</span></span><span lang=EN-GB
style='font-size:10.0pt;font-family:"Courier New"'>-&gt;allInstances()-&gt;</span></p>

<p class=MsoNormal align=left style='margin-left:106.2pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New"'>select(c
| c.name = </span></p>

<p class=MsoNormal align=left style='margin-left:141.6pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New"'>‘NameOfTheClassCorrespondingToTheSearchedKey’)),</span></p>

<p class=MsoNormal align=left style='margin-left:106.2pt;text-align:left;
text-indent:35.4pt;text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New"'>‘new_key’</span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:35.4pt;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New"'>)</span></p>

<h2><a name="_Toc88885460"></a><a name="_Toc98571952"><span lang=EN-GB>3.6<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-GB>Flexible Runtime Instantiation of Target Elements</span></a></h2>

<p class=MsoNormal><span lang=EN-GB>With the possibilities introduced so far it
was only possible to create a fixed number of target elements per rule. The <i>forEach</i>
expression allows to instantiate as many instances of target elements per rule
as needed at runtime. Hence, the number of target elements may be undefined at
compilation time.</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>With the help of an iterator, the <i>forEach</i>
operation iterates through a set of elements and instantiates a new target
element of the specified type for each occurrence in the set.</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal><i><span lang=EN-GB>The forEach</span></i><span lang=EN-GB>
expression is also called a <i>forEach</i> target pattern element. It starts
with a target pattern variable, a semicolon, the keyword distinct and the model
element type that has to be instantiated for each iteration. This is followed
by the keyword <i>forEach </i>and the iterator declaration in brackets. The
iterator declaration comprises the iterator name, the keyword <i>in</i> and an
expression of type set.</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>In the list to folder transformation a
tree-structured file folder has to be mapped to a flat list of files. More
precisely, for the root element of a tree, a list must be generated. This list
must contain all children of the folder’s root. The number of children is not
limited. This is a typical use case for a <i>forEach</i> expression:</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#7F0055;
background:white'>rule</span></b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'> Root2List {</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>      </span><b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:#7F0055;background:white'>from</span></b></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>            f : Folder!File (</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>                  f.folder.oclIsUndefined()</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>            )</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>      </span><b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:#7F0055;background:white'>using</span></b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> {</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>            allFiles : </span><span lang=EN-GB
style='font-size:10.0pt;font-family:"Courier New";color:#00C000;background:
white'>Sequence</span><span lang=EN-GB style='font-size:10.0pt;font-family:
"Courier New";color:black;background:white'>(Folder!File) = </span></p>

<p class=MsoNormal align=left style='margin-left:70.8pt;text-align:left;
text-indent:35.4pt;text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'>Folder!File.allInstances()-&gt;</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>                  select(e | e.oclIsTypeOf(Folder!File))-&gt;</span></p>

<p class=MsoNormal align=left style='margin-left:70.8pt;text-align:left;
text-indent:35.4pt;text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'>asSequence();</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>            allFilesPaths : </span><span lang=EN-GB
style='font-size:10.0pt;font-family:"Courier New";color:#00C000;background:
white'>Sequence</span><span lang=EN-GB style='font-size:10.0pt;font-family:
"Courier New";color:black;background:white'>(</span><span lang=EN-GB
style='font-size:10.0pt;font-family:"Courier New";color:#00C000;background:
white'>Sequence</span><span lang=EN-GB style='font-size:10.0pt;font-family:
"Courier New";color:black;background:white'>(</span><span lang=EN-GB
style='font-size:10.0pt;font-family:"Courier New";color:#00C000;background:
white'>String</span><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>)) = </span></p>

<p class=MsoNormal align=left style='margin-left:70.8pt;text-align:left;
text-indent:35.4pt;text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'>allFiles-&gt;collect(e
| e.folder.getPaths());</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>      }     </span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>      </span><b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:#7F0055;background:white'>to</span></b></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>            out : List!List (</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>                  name &lt;- f.name</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>            ),</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>            fi : </span><b><span lang=EN-GB style='font-size:
10.0pt;font-family:"Courier New";color:#7F0055;background:white'>distinct</span></b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> List!File </span><b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:#7F0055;background:white'>foreach</span></b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>(singleFile </span><b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:#7F0055;background:white'>in</span></b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> allFiles) (</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>                  name &lt;- singleFile.name,</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>                  path &lt;- allFilesPaths,</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>                  list &lt;- out</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'>            )</span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>}</span></p>

<p class=MsoNormal><span lang=EN-GB>A speciality of (the current version of) ATL
is that the <i>forEach</i> expression does not only iterate through the <i>allFiles</i>
sequence, but also through the <i>allFilesPaths</i>. This is why each file is
assigned with the corresponding path (represented through a sequence of folder
names).</span></p>

<h1><a name="_Toc98571953"><span lang=EN-GB>4<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>The ATL IDE for Eclipse</span></a></h1>

<p class=MsoNormal><span lang=EN-GB>Eclipse is an open universal tool platform for
software development and in particular for the construction of IDEs, integrated
development environments. It has been chosen to build the ATL IDE [1] with.</span></p>

<h2><a name="_Toc98571954"></a><a name="_Toc88885461"></a><a name="_Ref86660008"><span
lang=EN-GB>4.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Installing the ATL </span></a><span lang=EN-GB>IDE
for Eclipse</span></h2>

<p class=MsoNormal><span lang=EN-GB>For the installation of the ATL IDE for
Eclipse, please consult the ATL installation instructions in [4].</span></p>

<h2><a name="_Toc98571955"></a><a name="_Toc88885462"><span lang=EN-GB>4.2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-GB>Basic Features</span></a></h2>

<p class=MsoNormal><span lang=EN-GB>The Eclipse environment contains a set of
tools and features which have been adapted and extended to best suit the needs
of ATL development. The principal work environment is called workbench (see Figure
3) that contains several subwindows (views) and toolkits. </span></p>

<p class=MsoNormal style='page-break-after:avoid'><span lang=EN-GB><img
width=604 height=311
src="htmlShortATL_User_Manual%5bv00.05%5d_fichiers/image003.jpg"></span></p>

<p class=StyleLgende><a name="_Toc98571972"></a><a name="_Ref86722055"></a><a
name="_Ref86722082"><span lang=EN-GB>Figure </span></a><span
lang=EN-GB>3</span><span lang=EN-GB> ATL IDE for Eclipse</span></p>

<h3><a name="_Toc98571956"></a><a name="_Toc88885463"><span lang=EN-GB>4.2.1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-GB>Perspectives</span></a></h3>

<p class=MsoNormal><span lang=EN-GB>In Eclipse, the notion of perspective
refers to a workbench configuration that is arranged in order to optimise the
handling of a certain task. For ATL development there are two perspectives of
importance, namely the ATL perspective and the debug perspective. Depending on
your Eclipse workbench these perspectives may already be available via buttons
in the thumb index on the top right hand side of your workbench. Otherwise a
left mouse click on the perspective icon (displaying a window with subwindows
and a yellow cross, accessible on the top right hand side of your workbench)
leads you to a context menu from which <i>Other</i> and then <i>ATL</i> (for
the ATL development) or <i>Debug</i> (for the ATL execution in debug mode) can
be chosen to obtain the corresponding perspective. If ATL is not within the
selectable perspectives, the ATL plugin has not been successfully installed
(please reinstall, see paragraph 5.1).</span></p>

<p class=MsoNormal><span lang=EN-GB>Please note:</span></p>

<p class=MsoNormal style='margin-left:53.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Only the perspectives ATL or debug should be
used for developing projects with ATL or KM3.</span></p>

<h3><a name="_Toc98571957"></a><a name="_Toc88885464"><span lang=EN-GB>4.2.2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-GB>Navigator</span></a></h3>

<p class=MsoNormal><span lang=EN-GB>The Eclipse navigator shows you the files
of your workbench. With a right mouse click on a file you obtain a context menu
showing you possible actions, e.g. the possibility to open a file in a text
editor, to display an ATL file with the ATL editor, to debug or run an ATL file
or to import the Ecore model from a KM3 file. </span></p>

<h3><a name="_Toc98571958"></a><a name="_Toc88885465"></a><a name="_Ref86726137"><span
lang=EN-GB>4.2.3<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Editors</span></a></h3>

<p class=MsoNormal><span lang=EN-GB>Eclipse facilitates the development of
powerful source editors. Concerning the ATL development, an ATL editor has been
implemented that performs syntax highlighting, runtime parsing, compilation and
error detection. Modifications of the ATL file that lead to a syntactically
correct ATL program will immediately trigger the compilation and thus the
generation of a new assembler file (at latest when the file is saved). An assembler
file has the extension <i>.asm</i> and contains the compiled code of the
corresponding ATL file.    </span></p>

<p class=MsoNormal><span lang=EN-GB>Please note:</span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB>- For the
display of ATL files the ATL editor is recommended.</span></p>

<h3><a name="_Toc98571959"></a><a name="_Toc88885466"><span lang=EN-GB>4.2.4<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-GB>Outline</span></a></h3>

<p class=MsoNormal><span lang=EN-GB>The Eclipse outline view gives an overview
over the structural elements of the active file in the Eclipse editor with
which it is to be synchronized. In this sense the ATL editor is in permanent
communication with the outline view. Adding the code for a new structural element
such as a rule or a helper context function in the ATL editor will
automatically lead to a corresponding addition in the outline view (at latest
when the file is saved). Furthermore, the cursors in the ATL editor and the
outline view will always point to the same structural element (see Figure 4).
If the cursor is moved in one (meaning the ADT editor or the outline), the
other will replace its cursor correspondingly. </span></p>

<p class=MsoNormal><span lang=EN-GB>In the outline view it is possible to set
breakpoints for debugging that are marked in the ATL editor with green points. </span></p>

<p class=MsoNormal style='page-break-after:avoid'><span lang=EN-GB><img
width=605 height=364
src="htmlShortATL_User_Manual%5bv00.05%5d_fichiers/image004.jpg"></span></p>

<p class=StyleLgende><a name="_Toc98571973"></a><a name="_Ref86828933"></a><a
name="_Ref86828959"><span lang=EN-GB>Figure </span></a><span
lang=EN-GB>4</span><span lang=EN-GB> Synchronized Cursors of Outline and ATL
Editor</span></p>

<h3><a name="_Toc98571960"></a><a name="_Toc88885467"><span lang=EN-GB>4.2.5<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-GB>Console</span></a></h3>

<p class=MsoNormal><span lang=EN-GB>The Eclipse console shows the output of
programs that have been triggered form subordinate runtime workbenches. This is
a helpful feature for debugging ATL programs that make use of the <i>output
&lt;</i>- feature. For the creation a subordinate runtime workbench, use the
right mouse button to pop up the context menu and choose <i>Run</i> in the
submenu <i>Run</i>. In the run configuration view select <i>Run-Time Workbench</i>
and click the <i>New</i> button. Then select the newly created instance and
trigger the subordinate runtime workbench with the button <i>Run</i>. As a
consequence, the standard output of programs running in the subordinate runtime
workbench will be displayed in the console of the original workbench.</span></p>

<h2><a name="_Toc98571961"></a><a name="_Toc88885468"><span lang=EN-GB>4.3<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-GB>Creating a Project</span></a></h2>

<p class=MsoNormal><span lang=EN-GB>An ATL project is created with the
following actions:</span></p>

<p class=MsoNormal style='margin-left:53.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>In the Eclipse <i>File</i> menu choose the item <i>New</i>.</span></p>

<p class=MsoNormal style='margin-left:53.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>In the appearing view choose <i>ATL Project</i> within
the <i>ATL</i> folder and click on <i>Next</i>.</span></p>

<p class=MsoNormal style='margin-left:53.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Give the project a sensible name (by
concatenating the source model name, the character <i>2</i> and the target
model name, e.g. XSLT2XQuery) and push the <i>Finish</i> button. </span></p>

<p class=MsoNormal><span lang=EN-GB>Eclipse creates for each project a new
folder with the project name. This folder can be opened with a double click. At
the beginning it contains but a <i>.project</i> file that the ATL programmer
may ignore. However, for the basic transformation scenario you need an ATL
program in the form of an <i>.atl</i> file that should bear the same name as
the project itself, the source and the target metamodels in EMF [5] or MDR [9],
formatted in XMI [6]. For testing the transformation at least one source model
should be available. For the development of ATL programs, the ATL editor is
recommended (see paragraph 5.2.3).</span></p>

<p class=MsoNormal><span lang=EN-GB>The creation of an empty file is performed with
the following steps:</span></p>

<p class=MsoNormal style='margin-left:53.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Choose the item <i>New</i> in the Eclipse <i>File</i>
menu or in the Navigator context menu.</span></p>

<p class=MsoNormal style='margin-left:53.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Select the item <i>File</i>.</span></p>

<p class=MsoNormal style='margin-left:53.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>In the appearing view enter the file name and
the intended extension (e.g. <i>xmi</i>, <i>.atl</i> or .<i>km3</i>).</span></p>

<p class=MsoNormal style='margin-left:53.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Make sure that the correct project folder is
marked.</span></p>

<p class=MsoNormal style='margin-left:53.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Push the <i>Finish</i> button. </span></p>

<h2><a name="_Toc88885469"></a><a name="_Ref93214377"></a><a name="_Toc98571962"><span
lang=EN-GB>4.4<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Compilation</span></a></h2>

<p class=MsoNormal><span lang=EN-GB>In the Eclipse environment the compilation
of an ATL program to an ASM bytecode file is automatically done in the
background (e.g. when saving the ATL program).</span></p>

<h2><a name="_Toc98571963"><span lang=EN-GB>4.5<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Setting up a Launch Configuration</span></a><span
lang=EN-GB> </span></h2>

<p class=MsoNormal><span lang=EN-GB>The ATL debug and run environment can be
set up once you have created the ATL file and the corresponding metamodel and
model files. To obtain the launch configuration view you can use the context
menu in the navigator:</span></p>

<p class=MsoNormal style='margin-left:53.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>A right mouse click in the navigator view opens
the context menu.</span></p>

<p class=MsoNormal style='margin-left:53.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>In the context menu choose <i>Run...</i> in the
submenu of <i>Run</i> or choose <i>Debug...</i> in the submenu of <i>Debug</i>.
</span></p>

<p class=MsoNormal><span lang=EN-GB>Having reached the launch configuration
view (see Figure 5), an ATL transformation is created by selecting the <i>ATL Transformation</i>
instance in the configuration tree at the left hand side of the view and
pushing the <i>New</i> button below. Give to the configuration the same name as
to its project, choose the corresponding <i>.atl</i> file and specify the
metametamodel (EMF or MOF). </span></p>

<p class=MsoNormal align=center style='text-align:center;page-break-after:avoid'><span
lang=EN-GB><img width=579 height=314
src="htmlShortATL_User_Manual%5bv00.05%5d_fichiers/image005.jpg"></span></p>

<p class=StyleLgende><a name="_Toc98571974"></a><a name="_Ref86733516"></a><a
name="_Ref88887147"><span lang=EN-GB>Figure </span></a><span
lang=EN-GB>5</span><span lang=EN-GB> ATL Configuration</span></p>

<p class=MsoNormal><span lang=EN-GB>The next step to take is to specify the
metamodels and the models. To do so, pick the <i>Model Choice</i> panel in the
configuration view (see Figure 6) and follow these steps:</span></p>

<p class=MsoNormal style='margin-left:53.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Define the IN metamodel(s) and model variables
by writing their names in the designated fields of the IN box add press the <i>Add</i>
button. For the model and the metamodel names use the same variable name as
specified in your ATL file. The added variables will be displayed in the path
editor table.</span></p>

<p class=MsoNormal style='margin-left:53.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB> Define the OUT metamodel and model variables by
writing their names in the designated fields of the OUT box add press the <i>Add</i>
button. For the model and the metamodel names use the same variable name as
specified in your ATL file. For The added variables will be displayed in the
path editor table.</span></p>

<p class=MsoNormal style='margin-left:53.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>In the path editor select the different
variables and attribute the corresponding files. Push the <i>Set path</i>
button and specify their name. If the path is not within the workspace, use <i>Set
external path</i>.</span></p>

<p class=MsoNormal style='margin-left:53.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Define the libraries used in the <i>Libs</i>
panel. Please use the corresponding .<i>asm</i> files and make sure that the
naming corresponds to the import section of your ATL program.</span></p>

<p class=MsoNormal align=center style='text-align:center'><span lang=EN-GB><img
width=576 height=312
src="htmlShortATL_User_Manual%5bv00.05%5d_fichiers/image006.jpg"></span></p>

<p class=MsoCaption align=center style='text-align:center'><a
name="_Toc98571975"></a><a name="_Ref86733783"></a><a name="_Ref88887186"><span
lang=EN-GB>Figure </span></a><span lang=EN-GB>6</span><span lang=EN-GB> ATL
Model Configuration</span></p>

<h2><a name="_Toc98571964"></a><a name="_Toc88885471"><span lang=EN-GB>4.6<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-GB>Running a Launch Configuration</span></a></h2>

<p class=MsoNormal><span lang=EN-GB>ATL programs can be launched from the
navigator:</span></p>

<p class=MsoNormal style='margin-left:53.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Right mouse click in the navigator view.</span></p>

<p class=MsoNormal style='margin-left:53.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>In the context menu choose <i>Run...</i> in the
submenu of <i>Run</i>.</span></p>

<p class=MsoNormal style='margin-left:53.25pt;text-indent:-18.0pt'><span
lang=EN-GB>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Choose the configuration needed and run it by
pressing the <i>Run</i> button on the right bottom of the view.</span></p>

<p class=MsoNormal><span lang=EN-GB>Another possibility to trigger the
execution of an ATL program is to use the run icon (depicting a white play
forward sign on a green background) displayed in the bar underneath the main
menu.</span></p>

<h2><a name="_Toc88885470"></a><a name="_Toc98571965"><span lang=EN-GB>4.7<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-GB>Debugging</span></a><span lang=EN-GB> </span></h2>

<p class=MsoNormal><span lang=EN-GB>For debug actions it is recommended to
switch to the debug perspective. Additional to the editor and the outline, it
contains the debug window that displays the processes (terminated or not) and
the control window that lists all chosen <i>breakpoints</i> and <i>debug
variables</i> of ATL programs.</span></p>

<p class=MsoNormal><span lang=EN-GB>An essential instrument for debugging is
the partial execution step by step or with breakpoints. The latter are set with
a right mouse button click on a structural element (e.g. a rule) in the outline
view and then selecting the “add breakpoint” item. To trigger the partial
execution use the debug feature by clicking the debug icon.</span></p>

<p class=MsoNormal><span lang=EN-GB>You may additionally use the standard
output display described in the previous paragraph as a means for debugging.</span></p>

<h2><a name="_Toc98571966"><span lang=EN-GB>4.8<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Log File</span></a></h2>

<p class=MsoNormal><span lang=EN-GB>ADT log files are contained in your
workspace log file (your_workspace/.metadata/.log).</span></p>

<p class=MsoNormal><span lang=EN-GB>You can access the error log file via the <i>Help</i>
menu. Choose <i>About Eclipse Platform</i>, then <i>Configuration Details</i> and
finally <i>View Error Log</i>.</span></p>

</div>

<span lang=EN-GB style='font-size:12.0pt;font-family:"Times New Roman"'><br
clear=all style='page-break-before:always'>
</span>

<div class=Section3>

<p class=Atitle><a name="_Toc98571967"></a><a name="_Ref89142084"></a><a
name="_Toc88885472"><span lang=EN-GB>I<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Example Code</span></a></p>

<p class=MsoNormal><span lang=EN-GB>In this manual, the <i>Book to Publicatio</i>n
transformation example (see Figure 7 for the <i>Book</i> metamodel and Figure 8
for the <i>Publication</i> metamodel) serves to illustrate the use of ATL. </span></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0 align=left
 style='border-collapse:collapse;border:none;margin-left:4.8pt;margin-right:
 4.8pt'>
 <tr>
  <td width=307 valign=top style='width:230.3pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal align=center style='text-align:center;page-break-after:
  avoid'><span lang=EN-GB><img width=127 height=257
  src="htmlShortATL_User_Manual%5bv00.05%5d_fichiers/image001.gif"></span></p>
  <p class=MsoNormal><a name="_Toc98571976"></a><a name="_Ref88897703"><span
  lang=EN-GB>Figure </span></a><span lang=EN-GB>7</span><span lang=EN-GB> The
  Book metamodel</span></p>
  </td>
  <td width=307 valign=top style='width:230.3pt;border:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal align=center style='text-align:center;page-break-after:
  avoid'><span lang=EN-GB>&nbsp;</span></p>
  <p class=MsoNormal align=center style='text-align:center;page-break-after:
  avoid'><span lang=EN-GB>&nbsp;</span></p>
  <p class=MsoNormal align=center style='text-align:center;page-break-after:
  avoid'><span lang=EN-GB>&nbsp;</span></p>
  <p class=MsoNormal align=center style='text-align:center;page-break-after:
  avoid'><span lang=EN-GB>&nbsp;</span></p>
  <p class=MsoNormal align=center style='text-align:center;page-break-after:
  avoid'><span lang=EN-GB><img width=127 height=97
  src="htmlShortATL_User_Manual%5bv00.05%5d_fichiers/image002.gif"></span></p>
  <p class=MsoCaption align=center style='text-align:center'><a
  name="_Toc98571977"></a><a name="_Ref88897705"><span lang=EN-GB>Figure </span></a><span lang=EN-GB>8</span><span lang=EN-GB> The Publication metamodel</span></p>
  <p class=MsoNormal align=center style='text-align:center;page-break-after:
  avoid'>&nbsp;</p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>The <i>Book</i> <i>to</i> <i>Publication</i>
code transforms <i>Books</i> with mode than two pages to <i>Publications</i>.
The titles of <i>Books</i> and <i>Publications</i> have to correspond. The <i>authors</i>
attribute of <i>Publication </i>contains all <i>authors</i> of all <i>Chapters</i>.
The number of pages of a <i>Publication</i> is the sum of all pages of the <i>Chapters</i>
of a <i>Book</i>.</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><b><span lang=EN-GB style='font-size:10.0pt;font-family:
"Courier New";color:#7F0055;background:white'>module</span></b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> Book2Publication;</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><b><span lang=EN-GB style='font-size:10.0pt;font-family:
"Courier New";color:#7F0055;background:white'>create</span></b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> OUT : Publication </span><b><span lang=EN-GB
style='font-size:10.0pt;font-family:"Courier New";color:#7F0055;background:
white'>from</span></b><span lang=EN-GB style='font-size:10.0pt;font-family:
"Courier New";color:black;background:white'> IN : Book;</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><b><span lang=EN-GB style='font-size:10.0pt;font-family:
"Courier New";color:#7F0055;background:white'>helper</span></b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> </span><b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:#7F0055;background:white'>context</span></b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> Book!Book </span><b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:#7F0055;background:white'>def</span></b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> : getAuthors() : </span><span lang=EN-GB style='font-size:
10.0pt;font-family:"Courier New";color:#00C000;background:white'>String</span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> =</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>       self.chapters-&gt;collect(e |
e.author)-&gt;</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                              asSet()-&gt;</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                             iterate(authorName;
acc : </span><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:#00C000;background:white'>String</span><span lang=EN-GB style='font-size:
10.0pt;font-family:"Courier New";color:black;background:white'> = </span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#2A00FF;
background:white'>''</span><span lang=EN-GB style='font-size:10.0pt;font-family:
"Courier New";color:black;background:white'> |</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                                   acc + </span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                                   </span><b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#7F0055;
background:white'>if</span></b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'> acc = </span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#2A00FF;
background:white'>''</span><span lang=EN-GB style='font-size:10.0pt;font-family:
"Courier New";color:black;background:white'> </span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                                         </span><b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#7F0055;
background:white'>then</span></b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'> authorName </span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                                         </span><b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#7F0055;
background:white'>else</span></b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'> </span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#2A00FF;
background:white'>' and '</span><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'> + authorName </span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                                   </span><b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:#7F0055;
background:white'>endif</span></b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'>);</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><b><span lang=EN-GB style='font-size:10.0pt;font-family:
"Courier New";color:#7F0055;background:white'>helper</span></b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> </span><b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:#7F0055;background:white'>context</span></b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> Book!Book </span><b><span lang=EN-GB style='font-size:10.0pt;
font-family:"Courier New";color:#7F0055;background:white'>def</span></b><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> : getNbPages() : </span><span lang=EN-GB style='font-size:
10.0pt;font-family:"Courier New";color:#00C000;background:white'>Integer</span><span
lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";color:black;
background:white'> =</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>      </span><span style='font-size:10.0pt;
font-family:"Courier New";color:black;background:white'>self.chapters-&gt;collect(f|f.nbPages)-&gt;</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                             iterate(pages; acc :
</span><span style='font-size:10.0pt;font-family:"Courier New";color:#00C000;
background:white'>Integer</span><span style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'> = 0 |</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                        acc + pages);</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><b><span lang=EN-GB style='font-size:10.0pt;font-family:
"Courier New";color:#7F0055;background:white'>rule</span></b><span lang=EN-GB
style='font-size:10.0pt;font-family:"Courier New";color:black;background:white'>
Book2Publication {</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>      </span><b><span lang=EN-GB
style='font-size:10.0pt;font-family:"Courier New";color:#7F0055;background:
white'>from</span></b><span lang=EN-GB style='font-size:10.0pt;font-family:
"Courier New";color:black;background:white'> </span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>            b : Book!Book (</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                  b.getNbPages() &gt; 2</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>            ) </span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>      </span><b><span lang=EN-GB
style='font-size:10.0pt;font-family:"Courier New";color:#7F0055;background:
white'>to</span></b><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'> </span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>            out : Publication!Publication (</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                  title &lt;- b.title,</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                  authors &lt;- b.getAuthors(),</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span lang=EN-GB style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>                  </span><span style='font-size:
10.0pt;font-family:"Courier New";color:black;background:white'>nbPages &lt;-
b.getNbPages()</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>            )</span></p>

<p class=MsoNormal align=left style='margin-left:35.4pt;text-align:left;
text-autospace:none'><span style='font-size:10.0pt;font-family:"Courier New";
color:black;background:white'>}</span></p>

<p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=Atitle><a name="_Toc98571968"><span lang=EN-GB>II<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>Figures</span></a></p>

<p class=AnnexTitleI style='margin-left:0cm'><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal align=right style='text-align:right'><b><i><span lang=EN-GB
style='font-size:20.0pt'>&nbsp;</span></i></b></p>

<p class=MsoTof><span class=MsoHyperlink><a href="#_Toc98571970"><span
lang=EN-GB>Figure 1 The Book metamodel</span><span style='color:windowtext;
display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>7</span></a></span></p>

<p class=MsoTof><span class=MsoHyperlink><a href="#_Toc98571971"><span
lang=EN-GB>Figure 2 The Publication metamodel</span><span style='color:windowtext;
display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>8</span></a></span></p>

<p class=MsoTof><span class=MsoHyperlink><a href="#_Toc98571972"><span
lang=EN-GB>Figure 3 ATL IDE for Eclipse</span><span style='color:windowtext;
display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>16</span></a></span></p>

<p class=MsoTof><span class=MsoHyperlink><a href="#_Toc98571973"><span
lang=EN-GB>Figure 4 Synchronized Cursors of Outline and ATL Editor</span><span
style='color:windowtext;display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>17</span></a></span></p>

<p class=MsoTof><span class=MsoHyperlink><a href="#_Toc98571974"><span
lang=EN-GB>Figure 5 ATL Configuration</span><span style='color:windowtext;
display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>18</span></a></span></p>

<p class=MsoTof><span class=MsoHyperlink><a href="#_Toc98571975"><span
lang=EN-GB>Figure 6 ATL Model Configuration</span><span style='color:windowtext;
display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>19</span></a></span></p>

<p class=MsoTof><span class=MsoHyperlink><a href="#_Toc98571976"><span
lang=EN-GB>Figure 7 The Book metamodel</span><span style='color:windowtext;
display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>I</span></a></span></p>

<p class=MsoTof><span class=MsoHyperlink><a href="#_Toc98571977"><span
lang=EN-GB>Figure 8 The Publication metamodel</span><span style='color:windowtext;
display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>I</span></a></span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<b><span lang=EN-GB style='font-size:18.0pt;font-family:Arial'><br clear=all
style='page-break-before:always'>
</span></b>

<p class=Atitle style='margin-left:0cm;text-indent:0cm'><a name="_Ref86809324"></a><a
name="_Ref79645886"><span lang=EN-GB>&nbsp;</span></a></p>

<p class=Atitle><a name="_Toc98571969"><span lang=EN-GB>III<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-GB>References</span></a></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

<p class=Reference><a name="_Ref88893541"><span lang=EN-GB>[1]<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-US>Allilaire, F., Idrissi, T. ADT: Eclipse Development Tools for ATL. </span></a><span
lang=EN-GB>EWMDA-2, Kent, </span><span lang=EN-GB>September 2004</span></p>

<p class=Reference><a name="_Ref88967081"><span lang=EN-GB>[2]<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-GB>ATLAS group, KM3: Kernel MetaMetaModel Manual. 2004</span></a></p>

<p class=Reference><a name="_Ref98043347"></a><a name="_Ref97976790"><span
lang=EN-GB>[3]<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-GB>ATLAS Group, ATL Transformation Example: XSLT2XQuery.
200</span></a><span lang=EN-GB>4</span></p>

<p class=Reference><a name="_Ref88993143"><span lang=EN-GB>[4]<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-GB>ATLAS group, Installation of ADT from source. 2004 <br>
http://www.sciences.univ-nantes.fr/lina/atl/www/papers/ATL/ATL_Documentation/ADTInstallation.pdf</span></a></p>

<p class=Reference><a name="_Ref84248506"><span lang=EN-US style='color:black'>[5]<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-US style='color:black'>IBM, Eclipse project, EMF – Documentation. </span></a><a
href="http://www.eclipse.org/emf/"><span lang=EN-US style='color:black'>http://www.eclipse.org/emf/</span></a><span
lang=EN-US style='color:black'> </span></p>

<p class=Reference><a name="_Ref84245031"></a><a name="_Ref88987512"><span
lang=EN-US>[6]<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>OMG/MOF </span></a><span lang=EN-US>Meta</span><span
lang=EN-US> Object Facility (MOF). Version 1.4. formal/2002-04-03, 2002</span></p>

<p class=Reference><a name="_Ref88988460"><span lang=EN-US>[7]<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-US>Object Management Group: OMG/RFP/QVT MOF 2.0
Query/Views/Transformations RFP. October 2002</span></a></p>

<p class=Reference><span lang=EN-US>[8]<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>OMG/XMI XML Model Interchange (XMI) OMG Document
AD/98-10-05, October 1998. </span><a href="http://www.omg.org/"><span lang=DE>http://</span><span
lang=EN-US>www.omg.org</span></a></p>

<p class=Reference><a name="_Ref86820220"><span lang=EN-US>[9]<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-US>SUN, netBeans project, MDR - Metadata Repository. </span></a><a
href="http://mdr.netbeans.org/"><span lang=EN-US>http://mdr.netbeans.org/</span></a></p>

<p class=MsoNormal><span lang=EN-GB>&nbsp;</span></p>

</div>

</body>

</html>
